version: '3.9'

services:
  file-handler:
    build:
      context: ./Backend/File-Handler
    deploy:
      replicas: 3  # Skaliere den File-Handler auf 3 Instanzen
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app-network

  user-handler:
    build:
      context: ./Backend/User-Handler
    deploy:
      replicas: 3  # Skaliere den User-Handler auf 3 Instanzen
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app-network

  database:
    container_name: MariaDB
    build:
      context: ./Database
    environment:
      - MYSQL_ROOT_PASSWORD=${MARIA_DB_PASSWORD}
      - MYSQL_DATABASE=vs_filesharing
    ports:
      - "3306:3306"
    networks:
      - app-network

  frontend:
    container_name: Frontend
    build:
      context: ./Frontend
    command: ng serve --host
    ports:
      - "4200:4200"
    networks:
      - app-network

  nginx:
    container_name: Nginx
    build:
      context: ./Nginx
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - app-network

  minio1:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./minio/data1:/data
    command: server http://minio1/data http://minio2/data http://minio3/data
    networks:
      app-network:
        aliases:
          - minio1

  minio2:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./minio/data2:/data
    command: server http://minio1/data http://minio2/data http://minio3/data
    networks:
      app-network:
        aliases:
          - minio2

  minio3:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./minio/data3:/data
    command: server http://minio1/data http://minio2/data http://minio3/data
    networks:
      app-network:
        aliases:
          - minio3


networks:
  app-network:
    driver: bridge

