services:
  file-handler:
    build:
      context: ./Backend/File-Handler
    deploy:
      replicas: 3  # Skaliere den File-Handler auf 3 Instanzen
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app-network

  user-handler:
    build:
      context: ./Backend/User-Handler
    deploy:
      replicas: 3  # Skaliere den User-Handler auf 3 Instanzen
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app-network

  database:
    container_name: MariaDB
    build:
      context: ./Database
    environment:
      - MYSQL_ROOT_PASSWORD=${MARIA_DB_PASSWORD}
      - MYSQL_DATABASE=vs_filesharing
      - MYSQL_USER=vs_filesharing
    ports:
      - "3306:3306"
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    environment:
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - REDIS_PASSWORD=redispassword
    networks:
      - app-network
    ports:
      - "6379:6379" # Redis Port auf deinem Host verf√ºgbar

  frontend:
    container_name: Frontend
    build:
      context: ./Frontend
    command: ng serve --host
    ports:
      - "4200:4200"
    networks:
      - app-network

  nginx:
    container_name: Nginx
    build:
      context: ./Nginx
    volumes:
      - ./Nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - app-network

  # Shard 1 - Repliziert auf 3 Instanzen
  shard1-minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./minio/shard1/data1:/data1
      - ./minio/shard1/data2:/data2
      - ./minio/shard1/data3:/data3
    command: server --console-address ":9001" http://shard1-minio/data{1...3}
    expose:
      - "9001"
    networks:
      - app-network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

  # Shard 2 - Repliziert auf 3 Instanzen
  shard2-minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./minio/shard2/data1:/data1
      - ./minio/shard2/data2:/data2
      - ./minio/shard2/data3:/data3
    command: server --console-address ":9001" http://shard2-minio/data{1...3}
    expose:
      - "9001"
    networks:
      - app-network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

networks:
  app-network:
    driver: bridge

